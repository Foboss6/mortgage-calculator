{"version":3,"sources":["variables/pathnames.js","components/BanksList.js","components/Edit.js","components/Create.js","components/MortgageCalculator.js","App.js","reportWebVitals.js","index.js"],"names":["SERVER_PATH","withStyles","theme","root","width","marginTop","spacing","overflowX","backgroundColor","table","minWidth","head","fontSize","body","floatingButton","position","top","right","bottom","left","props","classes","history","useHistory","useState","banks","setBanks","React","useEffect","fetch","then","res","json","data","forEach","el","prevState","id","catch","console","log","handleDeleteButtonClick","event","banksId","currentTarget","value","method","headers","JSON","stringify","className","Button","variant","onClick","push","Paper","Table","TableHead","TableRow","TableCell","align","TableBody","Object","values","sort","a","b","bankname","toLowerCase","map","bank","interestrate","maxloan","mindownpayment","loanterm","IconButton","Fab","color","Edit","splittedPathname","useLocation","pathname","split","bankToEditId","length","setBank","onInputChange","fieldName","target","TextField","label","defaultValue","margin","onChange","ev","includes","errorText","setErrorText","useStyles","makeStyles","paper","boxShadow","background","MortgageCalculator","location","initialloan","downpayment","inputData","setInputData","outputData","setOutputData","splitedPathname","historyBank","currentHistory","setCurrentHistory","bankHistory","setBankHistory","helperError","setHelperError","setError","calculatePayments","p","parseInt","r","bankData","n","m","Number","Math","pow","toFixed","interestpayment","loanbalance","equity","calcData","month","totalpayment","i","handleBankChange","temp","date","replace","keys","handleHistoryChange","helperText","error","select","MenuItem","hist","saveBankHistory","TableContainer","component","size","App","exact","path","to","Create","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","basename","document","getElementById"],"mappings":"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","file":"static/js/main.7f4bf43e.chunk.js","sourcesContent":["export const SERVER_PATH = 'https://mortgage-calc-server.herokuapp.com';","import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { SERVER_PATH } from '../variables/pathnames';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport HistoryIcon from '@material-ui/icons/History';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(),\r\n    overflowX: 'auto',\r\n    backgroundColor: 'transparent',\r\n  },\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n  head: {\r\n    fontSize: 20,\r\n  },\r\n  body: {\r\n    fontSize: 16,\r\n  },\r\n  floatingButton: {\r\n    position: 'fixed',\r\n    top: 'auto',\r\n    right: '10%',\r\n    bottom: '2%',\r\n    left: 'auto',\r\n  },\r\n});\r\n\r\nconst BanksList = (props) => {\r\n  const { classes } = props;\r\n  const history = useHistory();\r\n\r\n  const [banks, setBanks] = useState({});\r\n\r\n  // function for loading banks from the database\r\n  const loadBanks = () => {\r\n    setBanks({});\r\n    fetch(`${SERVER_PATH}/banks`)\r\n    .then(res => res.json())\r\n    .then(data => {\r\n      data.forEach((el) => {\r\n        setBanks((prevState) => {\r\n          return {\r\n            ...prevState,\r\n            [el.id]: el,\r\n          }\r\n        })\r\n      });\r\n    })\r\n    .catch(console.log);\r\n  }\r\n\r\n  // load a banks list from the database when component did mount\r\n  React.useEffect(() => {\r\n    loadBanks();\r\n  }, []);\r\n\r\n  const handleDeleteButtonClick = (event) => {\r\n\r\n    const banksId = event.currentTarget.value;\r\n\r\n    fetch(`${SERVER_PATH}/banks/delete`, {\r\n      method: 'delete',\r\n      headers: {'Content-Type': 'application/json'},\r\n      body: JSON.stringify({id: banksId})\r\n    })\r\n    .then((res) => res.json())\r\n    .then(data => {\r\n      if(data === 'success') {\r\n        // if the bank was successfully delete from the database, delete it from the list\r\n        setBanks((prevState) => {\r\n          const banks = {...prevState}\r\n          delete banks[banksId];\r\n          return banks;\r\n        })\r\n      }\r\n      else console.log(data);\r\n    })\r\n    .catch(console.log);\r\n  }\r\n\r\n  return (\r\n    <div className=\"banks\">\r\n    <div>\r\n      <Button \r\n        variant=\"contained\" \r\n        onClick={() => history.push('/mortgage-calculator')}\r\n      >\r\n        Mortgage Calculator\r\n      </Button>\r\n    </div>\r\n    <Paper className={classes.root}>\r\n      <Table className={classes.table}>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell className={classes.head} align=\"center\">\r\n              <span>Bank Name</span>\r\n            </TableCell>\r\n            <TableCell className={classes.head} align=\"center\">\r\n              <span>Interest Rate</span>\r\n            </TableCell>\r\n            <TableCell className={classes.head} align=\"center\">\r\n              <span>Maximum Loan</span>\r\n            </TableCell>\r\n            <TableCell className={classes.head} align=\"center\">\r\n              <span>Minimum Down Payment</span>\r\n            </TableCell>\r\n            <TableCell className={classes.head} align=\"center\">\r\n              <span>Loan Term</span>\r\n            </TableCell>\r\n            <TableCell align=\"center\"></TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {Object.values(banks)\r\n          .sort((a, b) => {\r\n            if(a.bankname.toLowerCase() > b.bankname.toLowerCase()) return 1;\r\n            if(a.bankname.toLowerCase() < b.bankname.toLowerCase()) return -1;\r\n            return 0;\r\n          })\r\n          .map((bank) => (\r\n            <TableRow key={bank.id}>\r\n              <TableCell className={classes.body} align=\"center\">{bank.bankname}</TableCell>\r\n              <TableCell className={classes.body} align=\"center\">{bank.interestrate}</TableCell>\r\n              <TableCell className={classes.body} align=\"center\">$ {bank.maxloan}</TableCell>\r\n              <TableCell className={classes.body} align=\"center\">$ {bank.mindownpayment}</TableCell>\r\n              <TableCell className={classes.body} align=\"center\">{bank.loanterm}</TableCell>\r\n              <TableCell align=\"right\">\r\n                <IconButton aria-label=\"history\" value={bank.bankname} onClick={(event) => history.push(`/mortgage-calculator/${event.currentTarget.value}`)}>\r\n                  <HistoryIcon />\r\n                </IconButton>\r\n                <IconButton aria-label=\"edit\" value={bank.id} onClick={(event) => history.push(`/banks/${event.currentTarget.value}`)}>\r\n                  <EditIcon />\r\n                </IconButton>\r\n                <IconButton aria-label=\"delete\" value={bank.id} onClick={handleDeleteButtonClick}>\r\n                  <DeleteIcon />\r\n                </IconButton>\r\n              </TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </Paper>\r\n    <div className={classes.floatingButton}>\r\n      <Fab color=\"primary\" aria-label=\"add\" onClick={() => history.push(`/banks/create`)}>\r\n        <AddIcon />\r\n      </Fab>\r\n    </div>\r\n    </div>\r\n  );\r\n} \r\n\r\nexport default withStyles(styles)(BanksList);","import React from 'react';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\n\r\nimport { SERVER_PATH } from '../variables/pathnames';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst Edit = () => {\r\n  \r\n  const history = useHistory();\r\n  const location = useLocation();\r\n\r\n  //take bank ID from pathname\r\n  const splittedPathname = location.pathname.split('/');\r\n  const bankToEditId = splittedPathname[splittedPathname.length - 1];\r\n\r\n  const [bank, setBank] = React.useState({});\r\n\r\n  // first of all load bank's data from a database\r\n  React.useEffect(() => {\r\n    fetch(`${SERVER_PATH}/banks/${bankToEditId}`)\r\n    .then(res => res.json())\r\n    .then(data => setBank(data))\r\n    .catch(console.log);\r\n  }, [bankToEditId]);\r\n  \r\n  const onInputChange = (event, fieldName) => {\r\n    setBank((prevState) => ({\r\n      ...prevState,\r\n      [fieldName]: event.target.value\r\n    }));\r\n  }\r\n\r\n  const handleButtonClick = () => {\r\n    fetch(`${SERVER_PATH}/banks/${bankToEditId}`, {\r\n      method: 'put',\r\n      headers: {'Content-Type': 'application/json'},\r\n      body: JSON.stringify(bank),\r\n    })\r\n    .then((res) => res.json())\r\n    .then(data => data.includes('success') ? history.push('/') : console.log(`An error occurred during access to the database`))\r\n    .catch(console.log);\r\n\r\n    // for now, return to '/' in any case\r\n    history.push('/');\r\n  }\r\n  \r\n  return(\r\n      !!bank.id\r\n      ?\r\n      <div>\r\n        <div>\r\n          <Button \r\n            variant=\"contained\" \r\n            onClick={() => history.push('/')}\r\n          >\r\n            BACK\r\n          </Button>\r\n        </div>\r\n        <div className=\"center w-80 b-shadow ma\">\r\n          <h3>Edit {bank.bankname}'s data</h3>\r\n          <div>\r\n            <TextField\r\n              className=\"w-60\"\r\n              id=\"outlined-helperText-bankname\"\r\n              label=\"Bank Name\"\r\n              defaultValue={bank.bankname}\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              onChange={(ev) => onInputChange(ev, 'bankname')}\r\n            />\r\n          </div>\r\n          <div>\r\n            <TextField\r\n              className=\"w-60\"\r\n              id=\"outlined-helperText-interestrate\"\r\n              label=\"Interest Rate\"\r\n              defaultValue={bank.interestrate}\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              onChange={(ev) => onInputChange(ev, 'interestrate')}\r\n            />\r\n          </div>\r\n          <div>\r\n            <TextField\r\n              className=\"w-60\"\r\n              id=\"outlined-helperText-maxloan\"\r\n              label=\"Maximum Loan\"\r\n              defaultValue={bank.maxloan}\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              onChange={(ev) => onInputChange(ev, 'maxloan')}\r\n            />\r\n          </div>\r\n          <div>\r\n            <TextField\r\n              className=\"w-60\"\r\n              id=\"outlined-helperText-mindownpayment\"\r\n              label=\"Minimum Down Payment\"\r\n              defaultValue={bank.mindownpayment}\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              onChange={(ev) => onInputChange(ev, 'mindownpayment')}\r\n            />\r\n          </div>\r\n          <div>\r\n            <TextField\r\n              className=\"w-60\"\r\n              id=\"outlined-helperText-loanterm\"\r\n              label=\"Loan Term\"\r\n              defaultValue={bank.loanterm}\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              onChange={(ev) => onInputChange(ev, 'loanterm')}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Button \r\n              variant=\"contained\" \r\n              onClick={handleButtonClick}\r\n            >\r\n              Save\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      :\r\n      <div>\r\n        <h3>An error in loading bank's data</h3>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default Edit;","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { SERVER_PATH } from '../variables/pathnames';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst Edit = () => {\r\n  \r\n  const history = useHistory();\r\n\r\n  const [bank, setBank] = React.useState({});\r\n  const [errorText, setErrorText] = React.useState();\r\n\r\n  const onInputChange = (event, fieldName) => {\r\n    setBank((prevState) => ({\r\n      ...prevState,\r\n      [fieldName]: event.target.value\r\n    }));\r\n  }\r\n\r\n  const inputDataValidation = () => {\r\n    return (\r\n      bank.bankname && bank.interestrate && bank.maxloan && bank.mindownpayment && bank.loanterm\r\n      ? true\r\n      : false\r\n    )\r\n  }\r\n\r\n  const handleButtonClick = () => {\r\n    if( inputDataValidation() ) {\r\n      fetch(`${SERVER_PATH}/banks/create`, {\r\n        method: 'post',\r\n        headers: {'Content-Type': 'application/json'},\r\n        body: JSON.stringify(bank),\r\n      })\r\n      .then((res) => res.json())\r\n      .then(data => data.id ? history.push('/') : setErrorText(data))\r\n      .catch(console.log);\r\n  \r\n      // for now, return to '/' in any case\r\n      // history.push('/');\r\n    } else {\r\n      setErrorText('Invalid data');\r\n    }\r\n  }\r\n  \r\n  return(\r\n    <div>\r\n      <div>\r\n        <Button \r\n          variant=\"contained\" \r\n          onClick={() => history.push('/')}\r\n        >\r\n          BACK\r\n        </Button>\r\n      </div>\r\n      <div className=\"center w-80 b-shadow ma\">\r\n        <div>\r\n          <h2>You can add a new bank to the database</h2>\r\n        </div>\r\n        <div>\r\n          <TextField\r\n            className=\"w-60\"\r\n            id=\"outlined-helperText-bankname\"\r\n            label=\"Bank Name\"\r\n            defaultValue={bank.bankname}\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            onChange={(ev) => onInputChange(ev, 'bankname')}\r\n          />\r\n        </div>\r\n        <div>\r\n          <TextField\r\n            className=\"w-60\"\r\n            id=\"outlined-helperText-interestrate\"\r\n            label=\"Interest Rate\"\r\n            defaultValue={bank.interestrate}\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            onChange={(ev) => onInputChange(ev, 'interestrate')}\r\n          />\r\n        </div>\r\n        <div>\r\n          <TextField\r\n            className=\"w-60\"\r\n            id=\"outlined-helperText-maxloan\"\r\n            label=\"Maximum Loan\"\r\n            defaultValue={bank.maxloan}\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            onChange={(ev) => onInputChange(ev, 'maxloan')}\r\n          />\r\n        </div>\r\n        <div>\r\n          <TextField\r\n            className=\"w-60\"\r\n            id=\"outlined-helperText-mindownpayment\"\r\n            label=\"Minimum Down Payment\"\r\n            defaultValue={bank.mindownpayment}\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            onChange={(ev) => onInputChange(ev, 'mindownpayment')}\r\n          />\r\n        </div>\r\n        <div>\r\n          <TextField\r\n            className=\"w-60\"\r\n            id=\"outlined-helperText-loanterm\"\r\n            label=\"Loan Term\"\r\n            defaultValue={bank.loanterm}\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            onChange={(ev) => onInputChange(ev, 'loanterm')}\r\n          />\r\n        </div>\r\n        {\r\n          !!errorText\r\n          ?\r\n            <div>\r\n              <p>{errorText}</p>\r\n            </div>\r\n          :\r\n            <></>\r\n        }\r\n        <div>\r\n          <Button \r\n            variant=\"contained\" \r\n            onClick={handleButtonClick}\r\n          >\r\n            Add New Bank\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Edit;","import React from 'react';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport { SERVER_PATH } from '../variables/pathnames';\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n  paper: {\r\n    width: '80%',\r\n    margin: '1% auto',\r\n    boxShadow: '0 3px 10px rgb(0 0 0 / 0.2)',\r\n    background: 'transparent',\r\n  }\r\n});\r\n\r\nconst MortgageCalculator = () => {\r\n  const classes = useStyles();\r\n\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n\r\n  const [inputData, setInputData] = React.useState({\r\n    initialloan: '',\r\n    downpayment: '',\r\n    bankname: '',\r\n  });\r\n\r\n  const [outputData, setOutputData] = React.useState({});\r\n  const [banks, setBanks] = React.useState({});\r\n  // const [isCalculated, setIsCalculated] = React.useState(false);\r\n\r\n  \r\n  const splitedPathname = location.pathname.split('/');\r\n  const historyBank = splitedPathname[splitedPathname.length - 1].includes('mortgage-calculator') ? '' : splitedPathname[splitedPathname.length - 1];\r\n\r\n  const [currentHistory, setCurrentHistory] = React.useState('');\r\n  const [bankHistory, setBankHistory] = React.useState({});\r\n\r\n  const [helperError, setHelperError] = React.useState({\r\n    bankname: false,\r\n    downpayment: false,\r\n    initialloan: false,\r\n  });\r\n\r\n  const setError = (fieldName) => {\r\n    setHelperError((prevState) => (\r\n      {\r\n        ...prevState,\r\n        [fieldName]: true,\r\n      }\r\n    ));\r\n  };\r\n\r\n  const clearAllErrors = () => {\r\n    setHelperError({\r\n      bankname: false,\r\n      downpayment: false,\r\n      initialloan: false,\r\n    });\r\n  };\r\n\r\n  // function for loading banks from the database\r\n  const loadBanks = () => {\r\n    setBanks({});\r\n    fetch(`${SERVER_PATH}/banks`)\r\n    .then(res => res.json())\r\n    .then(data => {\r\n      data.forEach((el) => {\r\n        if(data.length) {\r\n          setBanks((prevState) => {\r\n            return {\r\n              ...prevState,\r\n              [el.id]: el,\r\n            }\r\n          });\r\n        } else console.log(data);\r\n      });\r\n    })\r\n    .catch(console.log);\r\n  }\r\n\r\n  const calculatePayments = () => {\r\n    let p = parseInt(inputData.initialloan, 10);\r\n    let r = parseInt(inputData.bankData.interestrate, 10)/100;\r\n    let n = 1;\r\n    if(inputData.bankData.loanterm.toLowerCase().includes('m')) n = parseInt(inputData.bankData.loanterm, 10);\r\n    else if(inputData.bankData.loanterm.toLowerCase().includes('y')) n = parseInt(inputData.bankData.loanterm, 10) * 12;\r\n    \r\n    let m = Number(((p*(r/12)*Math.pow((1+r/12), n))/(Math.pow((1+r/12), n) - 1)).toFixed(2));\r\n\r\n    let interestpayment = Number((p*r/12).toFixed(2));\r\n    let loanbalance = Number((parseInt(inputData.initialloan, 10) - m + interestpayment).toFixed(2));\r\n    let equity = Number((parseInt(inputData.downpayment, 10) + m - interestpayment).toFixed(2));\r\n    let calcData = {};\r\n         \r\n    calcData = {\r\n      1: {\r\n        month: 1,\r\n        totalpayment: m,\r\n        interestpayment: interestpayment,\r\n        loanbalance: loanbalance,\r\n        equity: equity,\r\n      }\r\n    };\r\n    for(let i=2; i<=n; i++) {\r\n      interestpayment = Number((loanbalance*r/12).toFixed(2));\r\n      loanbalance = Number((loanbalance - m + interestpayment).toFixed(2));\r\n      equity = Number((equity + m - interestpayment).toFixed(2));\r\n\r\n      calcData = {\r\n        ...calcData,\r\n        [i]: {\r\n          month: i,\r\n          totalpayment: m,\r\n          interestpayment: interestpayment,\r\n          loanbalance: loanbalance,\r\n          equity: equity,\r\n        }\r\n      };\r\n    }\r\n\r\n    return calcData;\r\n  }\r\n\r\n  const saveBankHistory = () => {\r\n    const { initialloan, downpayment, bankname } = inputData;\r\n    fetch(`${SERVER_PATH}/mortgage-calculator/history`, {\r\n      method: 'post',\r\n      headers: {'Content-Type': 'application/json'},\r\n      body: JSON.stringify({ bankname, initialloan, downpayment })\r\n    })\r\n    .then((res) => res.json())\r\n    .then((data) => {\r\n      if(data.id) console.log('success');\r\n      else console.log(data);\r\n    })\r\n    .catch(console.log);\r\n  }\r\n\r\n  const loadBankHistory = (bank) => {\r\n    setBankHistory({});\r\n    fetch(`${SERVER_PATH}/mortgage-calculator/history/${bank}`)\r\n    .then(res => res.json())\r\n    .then(data => {\r\n      if(data.length) {\r\n        let temp = {};\r\n        data.map((el) => temp = {\r\n          ...temp, \r\n          [el.date.split('.')[0].replace(/T/, ' ')]: {\r\n            ...el, date: el.date.split('.')[0].replace(/T/, ' ')\r\n          }\r\n        });\r\n        setBankHistory(temp);\r\n        // setShowHistory(false);\r\n        // setCurrencyHystory(data.map(({date}) => date.split('.')[0].replace(/T/, ' ')));\r\n      } else {\r\n        console.log(`\"${bank}\" have no history`);\r\n        // setBankHistory({});\r\n        // setShowHistory(false);\r\n      }\r\n    })\r\n    .catch(console.log);\r\n  }\r\n\r\n  // load a banks list from the database when component did mount\r\n  React.useEffect(() => {\r\n    loadBanks();\r\n    \r\n    if(historyBank) {\r\n      handleBankChange({target:{value: historyBank}});\r\n    }\r\n  }, []);\r\n  // when the bank will be chosen check and load bank's history\r\n  React.useEffect(() => {\r\n    if(inputData.bankname) loadBankHistory(inputData.bankname);\r\n  }, [inputData.bankname]);\r\n  // when history will be loaded choose the first record\r\n  React.useEffect(() => {\r\n    if(historyBank && Object.keys(bankHistory).length) {\r\n      handleHistoryChange({target:{value: Object.values(bankHistory)[0].date}})\r\n    }\r\n  }, [bankHistory]);\r\n\r\n  const onInputChange = (event, fieldName) => {\r\n    setInputData((prevState) => ({\r\n      ...prevState,\r\n      [fieldName]: event.target.value\r\n    }));\r\n\r\n    setOutputData({});\r\n  }\r\n\r\n  const handleBankChange = (event) => {\r\n    setInputData((prevState) => (\r\n      {\r\n        ...prevState,\r\n        bankname: event.target.value,\r\n        bankData: {},\r\n      }\r\n    ));\r\n    setOutputData({});\r\n    // get selected bank's data from server\r\n    fetch(`${SERVER_PATH}/mortgage-calculator/${event.target.value}`)\r\n    .then((res) => res.json())\r\n    .then(data => {\r\n      if(data.id) {\r\n        setInputData((prevState) => ({\r\n          ...prevState,\r\n          bankData: data,\r\n        }));\r\n      } else console.log(data);\r\n    })\r\n    .catch(console.log);\r\n  }\r\n\r\n  const handleHistoryChange = (event) => {\r\n    setCurrentHistory(event.target.value);\r\n\r\n    setInputData((prevState) => (\r\n      {\r\n        ...prevState,\r\n        initialloan: bankHistory[event.target.value].initialloan,\r\n        downpayment: bankHistory[event.target.value].downpayment,\r\n      }\r\n    ));\r\n    if(inputData.bankData.id) setOutputData(calculatePayments());\r\n  }\r\n\r\n  const handleButtonClick = (event) => {\r\n    clearAllErrors();\r\n    setOutputData({});\r\n\r\n    if( !inputData.bankname ) return setError('bankname');\r\n    if( !inputData.initialloan ) return setError('initialloan');\r\n    if( parseInt(inputData.initialloan) > parseInt(inputData.bankData.maxloan) ) return setError('initialloan');\r\n    if( !inputData.downpayment ) return setError('downpayment');\r\n    if( parseInt(inputData.downpayment) < parseInt(inputData.bankData.mindownpayment) ) return setError('downpayment');\r\n\r\n    if(inputData.bankData.id) {\r\n      // calculate all payments\r\n      setOutputData(calculatePayments());\r\n\r\n      // save input data to the bank's history\r\n      saveBankHistory();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Button \r\n          variant=\"contained\" \r\n          onClick={() => history.push('/')}\r\n        >\r\n          BACK\r\n        </Button>\r\n      </div>\r\n      <div className=\"center\">\r\n        <h2> Welcome to The Mortgage Calculator</h2>\r\n        <div>\r\n          <TextField\r\n            id=\"outlined-helperText-bankname\"\r\n            label=\"Initial Loan\"\r\n            helperText=\"Please indicate your initial loan\"\r\n            value={inputData.initialloan}\r\n            error={helperError.initialloan}\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            onChange={(ev) => onInputChange(ev, 'initialloan')}\r\n          />\r\n          <TextField\r\n            id=\"outlined-helperText-interestrate\"\r\n            label=\"Down Payment\"\r\n            helperText=\"Please indicate the down payment\"\r\n            value={inputData.downpayment}\r\n            error={helperError.downpayment}\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            onChange={(ev) => onInputChange(ev, 'downpayment')}\r\n          />\r\n          <TextField\r\n            id=\"outlined-select-currency\"\r\n            select\r\n            label=\"Select The Bank\"\r\n            value={inputData.bankname}\r\n            onChange={handleBankChange}\r\n            helperText=\"Please select the bank you need\"\r\n            error={helperError.bankname}\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n          >\r\n          {\r\n            banks\r\n            ?\r\n              Object.values(banks).map((bank) => (\r\n                <MenuItem key={bank.bankname} value={bank.bankname}>\r\n                  {bank.bankname}\r\n                </MenuItem>\r\n              ))\r\n            :\r\n              <></>\r\n          }\r\n          </TextField>\r\n          {\r\n            Object.keys(bankHistory).length\r\n            ?\r\n              <TextField\r\n                id=\"outlined-select-currencyHistory\"\r\n                select\r\n                label=\"HISTORY: select The Date\"\r\n                value={currentHistory}\r\n                onChange={handleHistoryChange}\r\n                helperText=\"HISTORY: select the date you whant to see\"\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n              >\r\n                {\r\n                  Object.values(bankHistory).map((hist) => (\r\n                    <MenuItem key={hist.date} value={hist.date}>\r\n                      {hist.date}\r\n                    </MenuItem>\r\n                  ))\r\n                }\r\n              </TextField>\r\n            :\r\n              <></>\r\n          }\r\n          <div>\r\n            <Button \r\n              variant=\"contained\" \r\n              onClick={handleButtonClick}\r\n            >\r\n              Calculate\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {\r\n        Object.keys(outputData).length\r\n        ?\r\n        <div>\r\n          <TableContainer className={classes.paper} component={Paper}>\r\n            <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell align=\"center\">Month</TableCell>\r\n                  <TableCell align=\"center\">Total payment&nbsp;($)</TableCell>\r\n                  <TableCell align=\"center\">Interest payment&nbsp;($)</TableCell>\r\n                  <TableCell align=\"center\">Loan balance&nbsp;($)</TableCell>\r\n                  <TableCell align=\"center\">Equity&nbsp;($)</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {Object.values(outputData).map((data) => (\r\n                  <TableRow key={data.bankname}>\r\n                    <TableCell key={data.month + 1} align=\"center\">{data.month}</TableCell>\r\n                    <TableCell key={data.month + 2} align=\"center\">{data.totalpayment}</TableCell>\r\n                    <TableCell key={data.month + 3} align=\"center\">{data.interestpayment}</TableCell>\r\n                    <TableCell key={data.month + 4} align=\"center\">{data.loanbalance}</TableCell>\r\n                    <TableCell key={data.month + 5} align=\"center\">{data.equity}</TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </div>\r\n        :\r\n        <></>\r\n      }\r\n    </div>\r\n  )\r\n} \r\n\r\nexport default MortgageCalculator;","import { Switch, Route, Redirect } from 'react-router-dom';\n\nimport BanksList from './components/BanksList';\nimport Edit from './components/Edit';\nimport Create from './components/Create';\nimport MortgageCalculator from './components/MortgageCalculator';\n\nfunction App() {\n  return (\n    <Switch>\n      <Route exact path='/'>\n        <Redirect to=\"/banks\" />\n      </Route>\n      <Route exact path='/banks'>\n        <BanksList />\n      </Route>\n      <Route path='/mortgage-calculator'>\n        <MortgageCalculator />\n      </Route>\n      <Route exact path='/banks/create'>\n        <Create />\n      </Route>\n      <Route exact path='/banks/:id'>\n        <Edit />\n      </Route>\n    </Switch>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\n\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter basename='/'>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\nreportWebVitals();\n"],"sourceRoot":""}